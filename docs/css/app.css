@charset "UTF-8";
/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
.btn-link {
  font-weight: normal;
  color: $link-color;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &:disabled {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:focus,
  &:active {
    border-color: transparent;
  }
  @include hover {
    border-color: transparent;
  }
  @include hover-focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &:disabled {
    @include hover-focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}
*/
/*
@mixin btn-color($color, $background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);

  color: $color;
  background-color: $background;
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:focus,
  &.focus {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
    // Remove the gradient for the pressed/active state
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: darken($background, 17%);
          border-color: darken($border, 25%);
    }
  }

  &.disabled,
  &:disabled {
    &:focus,
    &.focus {
      background-color: $background;
          border-color: $border;
    }
    @include hover {
      background-color: $background;
          border-color: $border;
    }
  }
}
*/
/*
@mixin btn-outline-color($color) {
    color: $color;
    background-image: none;
    background-color: transparent;
    border-color: $color;

    @include hover {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:focus,
    &.focus {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:active,
    &.active,
    .open > &.dropdown-toggle {
        color: #fff;
        background-color: $color;
        border-color: $color;

        &:hover,
        &:focus,
        &.focus {
            color: #fff;
            background-color: darken($color, 17%);
            border-color: darken($color, 25%);
        }
    }

    &.disabled,
    &:disabled {
        &:focus,
        &.focus {
            border-color: lighten($color, 20%);
        }

        @include hover {
            border-color: lighten($color, 20%);
        }
    }
}
*/
/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
Scrollbar
--------------------
        1
────────┐
        ┴   2
        ┬   2
        ║   3-4
        ║   3-4
        │   5-4
        │   5-4
────────┘   6-7
        1
--------------------
*/
/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
.btn-link {
  font-weight: normal;
  color: $link-color;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &:disabled {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:focus,
  &:active {
    border-color: transparent;
  }
  @include hover {
    border-color: transparent;
  }
  @include hover-focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &:disabled {
    @include hover-focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}
*/
/*
@mixin btn-color($color, $background, $border) {
  $active-background: darken($background, 10%);
  $active-border: darken($border, 12%);

  color: $color;
  background-color: $background;
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:focus,
  &.focus {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
  }

  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: $active-background;
        border-color: $active-border;
    // Remove the gradient for the pressed/active state
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: darken($background, 17%);
          border-color: darken($border, 25%);
    }
  }

  &.disabled,
  &:disabled {
    &:focus,
    &.focus {
      background-color: $background;
          border-color: $border;
    }
    @include hover {
      background-color: $background;
          border-color: $border;
    }
  }
}
*/
/*
@mixin btn-outline-color($color) {
    color: $color;
    background-image: none;
    background-color: transparent;
    border-color: $color;

    @include hover {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:focus,
    &.focus {
        color: #fff;
        background-color: $color;
        border-color: $color;
    }

    &:active,
    &.active,
    .open > &.dropdown-toggle {
        color: #fff;
        background-color: $color;
        border-color: $color;

        &:hover,
        &:focus,
        &.focus {
            color: #fff;
            background-color: darken($color, 17%);
            border-color: darken($color, 25%);
        }
    }

    &.disabled,
    &:disabled {
        &:focus,
        &.focus {
            border-color: lighten($color, 20%);
        }

        @include hover {
            border-color: lighten($color, 20%);
        }
    }
}
*/
/*
@function pow($number, $exp) {
    $value: 1;

    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $number;
        }
    }
    @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $number;
        }
    }

    @return $value;
}
*/
/*
Scrollbar
--------------------
        1
────────┐
        ┴   2
        ┬   2
        ║   3-4
        ║   3-4
        │   5-4
        │   5-4
────────┘   6-7
        1
--------------------
*/
.card-items {
  width: 100%;
  height: 330px; }

.card-column {
  display: inline-table;
  width: 300px;
  height: 300px; }
  .card-column > .inner {
    width: 300px;
    height: 300px; }

.card-column + .card-column {
  padding-left: 30px; }

.card-item {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 300px;
  height: 300px;
  border: 1px solid #0000fe;
  border-radius: 12px; }
  .card-item .title {
    font-size: 110px;
    margin-top: -40px; }

.card-item + .card-item {
  margin-top: 30px; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'Palanquin Dark', sans-serif; }

.nav-link {
  font-family: 'Palanquin Dark', sans-serif; }

.btn {
  font-family: 'Palanquin Dark', sans-serif; }

.json-formatter-row {
  font-family: 'Inconsolata', monospace; }
  .json-formatter-row .toggler {
    font-size: 0.55em;
    line-height: 1em;
    opacity: 1;
    color: #aaa; }

.card-items {
  width: 100%;
  height: 330px; }

.card-column {
  display: inline-table;
  width: 300px;
  height: 300px; }
  .card-column > .inner {
    width: 300px;
    height: 300px; }

.card-column + .card-column {
  padding-left: 30px; }

.card-item {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 300px;
  height: 300px;
  border: 1px solid #0000fe;
  border-radius: 12px; }
  .card-item .title {
    font-size: 110px;
    margin-top: -40px; }

.card-item + .card-item {
  margin-top: 30px; }

html,
body {
  width: 100%;
  height: 100%; }

body {
  padding: 0;
  font-size: 16px;
  font-family: 'Raleway', sans-serif;
  background: #ffffff;
  color: #0000fe; }

page {
  padding: 40px; }

.background {
  position: absolute;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.1) center;
  background-size: cover; }

section {
  position: relative;
  height: 480px;
  border-radius: 10px;
  overflow: hidden;
  border: 1px solid #0000fe; }
  section .svg-picture {
    position: absolute; }
  section .inner {
    display: flex;
    position: relative;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    padding: 60px; }

section + section {
  margin-top: 20px; }

footer {
  margin: 20px 0; }
  footer section {
    height: 200px; }

.maxw-sm {
  width: 100vw;
  max-width: 640px;
  margin: auto; }

.flex-bar {
  display: flex;
  justify-content: center;
  padding: 30px 0; }

/*
.container-form {
    max-width: 720px;
    border: 1px solid #eee;
    border-radius: 10px;
    margin-bottom: 30px;
    box-shadow: 0 20px 40px -10px rgba(0, 0, 0, 0.3);
    &>.outer {
        position: relative;
        margin: 0 -15px;
    }
    &>.inner {
        // padding: 30px 80px;
    }
}
*/
.controls {
  position: relative; }
  .controls .input-group {
    position: absolute;
    top: 15px;
    left: 15px;
    right: 15px;
    width: auto;
    max-width: 960px;
    margin: 0 auto; }
  .controls .dropdown-menu {
    position: absolute;
    top: 60px;
    left: 15px;
    right: 15px;
    max-width: 960px;
    margin: 0 auto; }
  .controls .btn-group {
    position: absolute;
    bottom: 6px;
    right: 15px; }

[unselectable] {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; }
